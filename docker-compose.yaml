services:
  bet_maker:
    image: bet_maker_image
    container_name: app.bet_maker
    hostname: app.bet_maker
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./Dockerfile
    command: [ "uvicorn", "src.bet_maker.presentation.api.main:app", "--host", "0.0.0.0", "--port", "8080" ]
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      app_db:
        condition: service_healthy
      app_rabbitmq:
        condition: service_healthy
    networks:
      - app_tg_bot_network

  line_provider:
    image: line_provider_image
    container_name: app.line_provider
    hostname: app.line_provider
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["python", "-m", "src.line_provider"]
    ports:
      - "8100:8100"
    restart: unless-stopped
    depends_on:
      app_rabbitmq:
        condition: service_healthy
    networks:
      - app_tg_bot_network

  app_db:
    image: library/postgres:16-alpine
    container_name: app.postgres
    hostname: app.postgres
    env_file:
      - .env
    volumes:
      - app_pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
    networks:
      - app_tg_bot_network

  app_rabbitmq:
    image: rabbitmq:4.0.3-management-alpine
    container_name: app.rabbitmq
    hostname: app.rabbitmq
    restart: unless-stopped
    expose:
      # AMQP protocol port
      - "5672"
      # HTTP management UI
      - "15672"
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    volumes:
      - app_rabbitmq_data:/var/lib/rabbitmq/:rw
    environment:
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-admin}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics check_running -q" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
    networks:
      - app_tg_bot_network

  pg_admin:
    image: dpage/pgadmin4
    container_name: app.pg_admin
    hostname: app.pg_admin
    ports:
      - "8000:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
    networks:
      - app_tg_bot_network

volumes:
  app_pg_data: { }
  app_rabbitmq_data: { }

networks:
  app_tg_bot_network: { }
